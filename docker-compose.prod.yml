version: '3.9'

services:
  reverse-proxy:
    image: caddy:2-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./deploy/Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      api:
        condition: service_healthy
      web:
        condition: service_started

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file:
      - .env.prod
    environment:
      NODE_ENV: production
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - api-data:/app/apps/api/data
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:3000/health || exit 1']
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    env_file:
      - .env.prod
    expose:
      - '8080'

  playtester:
    build:
      context: .
      dockerfile: services/playtester/Dockerfile
    env_file:
      - .env.prod
    environment:
      API_BASE_URL: http://api:3000
      METRICS_PORT: 9100
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    ports:
      - '9100:9100'
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:9100/health || exit 1']
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s

  redis:
    image: redis:7-alpine
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  api-data:
  redis-data:
